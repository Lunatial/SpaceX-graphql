{"version":3,"sources":["logo.jpg","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_success","launch_date_local","react_default","a","createElement","className","classNames","text-success","text-danger","moment","format","react_router_dom","to","concat","MissionKey","LAUNCHES_QUERY","gql","_templateObject","Launches","Fragment","react_apollo_esm","query","loading","error","data","console","log","launches","map","index","key","Component","LAUNCH_QUERY","Launch_templateObject","Launch","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","props","match","params","parseInt","variables","_data$launch","launch_year","launch_succes","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","dispay","margin","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b416e27a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3ef5c7ea.jpg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nexport default function LaunchItem({\n  launch: { flight_number, mission_name, launch_success, launch_date_local }\n}) {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>\n            Mission:{\" \"}\n            <span\n              className={classNames({\n                \"text-success\": launch_success,\n                \"text-danger\": !launch_success\n              })}\n            >\n              {mission_name}\n            </span>\n          </h4>\n          <p>Date: {moment(launch_date_local).format(\"YYYY-MM-DD H:mm\")}</p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\n            Launch details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nexport default function MissionKey(){\r\n   return <div className=\"my-3\">\r\n        <p>\r\n            <span className=\"px-3 mr-2 bg-success\" /> = Success\r\n        </p>\r\n        <p>\r\n            <span className=\"px-3 mr-2 bg-danger\" /> = Fail\r\n        </p>\r\n    </div>\r\n}\r\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nimport LaunchItem from \"./LaunchItem\";\nimport MissionKey from \"./MissionKey\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_success\n      launch_date_local\n    }\n  }\n`;\n\nexport default class Launches extends Component {\n  render() {\n    return (\n      <>\n        <h1 className={\"display-4 my-3\"}>Launches</h1>\n        <MissionKey />\n        <Query query={LAUNCHES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) {\n              return <h4>Loading...</h4>;\n            }\n            if (error) {\n              console.log(error);\n            }\n            return (\n              <>\n                {data.launches.map((launch, index) => (\n                  <LaunchItem key={index} launch={launch} />\n                ))}\n              </>\n            );\n          }}\n        </Query>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query LaunchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      mission_name\r\n      launch_success\r\n      flight_number\r\n      launch_date_local\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Launch extends Component {\r\n  render() {\r\n    let { flight_number } = this.props.match.params;\r\n    flight_number = parseInt(flight_number);\r\n    return (\r\n      <>\r\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) {\r\n              return <h4>Loading...</h4>;\r\n            }\r\n            if (error) {\r\n              console.log(error);\r\n            }\r\n            const {\r\n              mission_name,\r\n              flight_number,\r\n              launch_year,\r\n              launch_succes,\r\n              rocket: { rocket_id, rocket_name, rocket_type }\r\n            } = data.launch;\r\n            return (\r\n              <div>\r\n                <h1 className=\"display-4 my-3\">\r\n                  <span className={\"text-dark\"}>Mission:</span> {mission_name}\r\n                </h1>\r\n                <h4 className={\"mb-3\"}>Launch Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Flight Number: {flight_number}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Year: {launch_year}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Successful:{\" \"}\r\n                    <span\r\n                      className={classNames({\r\n                        \"text-success\": launch_succes,\r\n                        \"text-danger\": !launch_succes\r\n                      })}\r\n                    >\r\n                      {launch_succes ? \"Yes\" : \"No\"}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n                <h4 className={\"my-3\"}>Rocket Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Name: {rocket_name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Type: {rocket_type}\r\n                  </li>\r\n                </ul>\r\n                <hr />\r\n                <Link to={`/`} className=\"btn btn-secondary\">\r\n                  Back\r\n                </Link>\r\n              </div>\r\n            );\r\n          }}\r\n        </Query>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Launch;\r\n","import React, { Component } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"./bootstrap.min.css\";\nimport logo from \"./logo.jpg\";\n\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <BrowserRouter>\n          <div className=\"container\">\n            <img\n              src={logo}\n              alt=\"logo\"\n              style={{ width: 300, dispay: \"block\", margin: \"auto\" }}\n            />\n            <Route exact path=\"/\" component={Launches} />\n            <Route exact path=\"/launch/:flight_number\" component={Launch} />\n          </div>\n        </BrowserRouter>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}